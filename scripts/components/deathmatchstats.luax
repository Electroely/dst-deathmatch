local OnKillOther = function(inst, data)
	if data.victim.components.deathmatchstats then
		inst.components.deathmatchstats:RegisterKill(data.victim)
	end
end

local OnDeath = function(inst, data)
	if data.afflicter and data.afflicter.components.deathmatchstats then
		inst.components.deathmatchstats:RegisterDeath(data.afflicter)
	end
end

local DeathmatchStats = Class(function(self, inst)
	self.inst = inst
	
	self.kills = 0
	self.deaths = 0
	self.killassists = 0
	
	self.kills_netvar = net_tinybyte(inst.GUID, "deathmatchstats.kills", "onnetkillsdirty")
	self.deaths_netvar = net_tinybyte(inst.GUID, "deathmatchstats.deaths", "onnetdeathsdirty")
	self.net_statboard = {}
	
	inst:ListenForEvent("killed", OnKillOther)
	inst:ListenForEvent("death", OnDeath)
end)

function DeathmatchStats:RegisterKill(victim)
	self.kills = self.kills + 1 -- no killer registration yet
	self:UpdateStats()
end

function DeathmatchStats:RegisterDeath(killer)
	self.deaths = self.deaths + 1
	self:UpdateStats()
end

function DeathmatchStats:UpdateStats()
	if TheWorld.ismastersim then
		--[[for k, v in pairs(AllPlayers) do
			for k2, v2 in pairs(AllPlayers) do
				if v.userid and v2.userid then
					v.components.deathmatchstats.net_statboard[v2.userid].kills:set(v2.components.deathmatchstats.kills)
					v.components.deathmatchstats.net_statboard[v2.userid].deaths:set(v2.components.deathmatchstats.deaths)
				end
			end
		end]]
		self.kills_netvar:set(self.kills)
		self.deaths_netvar:set(self.deaths)
	end
end

function DeathmatchStats:ResetStats()
	self.kills = 0
	self.deaths = 0
	self:UpdateStats()
end

function DeathmatchStats:StopRecording()
	self.inst:RemoveEventCallback("killed", OnKillOther)
	self.inst:RemoveEventCallback("death", OnDeath)
end

function DeathmatchStats:StartRecording()
	self.inst:ListenForEvent("killed", OnKillOther)
	self.inst:ListenForEvent("death", OnDeath)
end

return DeathmatchStats